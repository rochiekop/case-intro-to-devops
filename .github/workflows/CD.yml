name: CD (Continuous Delivery & Deployment)

on:
  push:
    branches: [ "master" ]

jobs:
  build-push:
    name: Build and Push Image To DockerHub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push flaskapp
        uses: docker/build-push-action@v4
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:${{ github.run_number }}

      - name: Build and push postgres
        uses: docker/build-push-action@v4
        with:
          context: ./postgres
          file: ./postgres/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/postgres:${{ github.run_number }}

  deploy:
    name: Deploy to Server
    runs-on: self-hosted #Host
    needs: build-push

    steps:
      - name: Pull New Images
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:${{ github.run_number }}
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/postgres:${{ github.run_number }}
      - name: Stop and Remove existing container
        run: |
          docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)
          docker network prune -f

      - name: Create Network and Run containers
        run: |
          docker network create absensi
          docker run -d -p 5432:5432 --network absensi --hostname database --mount "type=volume,source=pgdata,destination=/var/lib/postgresql/data" --name postgres-container -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=qwerty123 -e POSTGRES_DB=absensi ${{secrets.DOCKERHUB_USERNAME}}/postgres:${{ github.run_number }}
          sleep 5
          docker run -d -p 5000:5000 --network absensi --name flask-container ${{secrets.DOCKERHUB_USERNAME}}/flaskapp:${{ github.run_number }} 
